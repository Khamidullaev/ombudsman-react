{"ast":null,"code":"var _jsxFileName = \"/home/khamidullaev/PROJECTS/react-redux-thunk-template/src/localization/LocalizationProvider.jsx\";\nimport { Fragment } from 'react';\nimport { IntlProvider } from 'react-intl';\nimport ruRU from './languages/ru-RU.json';\nimport uzLatnUZ from './languages/uz-Latn-UZ.json';\nimport uzCyrlUZ from './languages/uz-Cyrl-UZ.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst messages = {\n  'ru-RU': ruRU,\n  'uz-Latn-UZ': uzLatnUZ,\n  'uz-Cyrl-UZ': uzCyrlUZ\n};\n\nconst LocalizationProvider = ({\n  children\n}) => {\n  const locale = 'ru-RU';\n  return /*#__PURE__*/_jsxDEV(IntlProvider, {\n    locale: locale,\n    textComponent: Fragment,\n    messages: messages[locale],\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_c = LocalizationProvider;\nexport default LocalizationProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"LocalizationProvider\");","map":{"version":3,"sources":["/home/khamidullaev/PROJECTS/react-redux-thunk-template/src/localization/LocalizationProvider.jsx"],"names":["Fragment","IntlProvider","ruRU","uzLatnUZ","uzCyrlUZ","messages","LocalizationProvider","children","locale"],"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,YAAT,QAA6B,YAA7B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,QAAP,MAAqB,6BAArB;;AAEA,MAAMC,QAAQ,GAAG;AACf,WAASH,IADM;AAEf,gBAAcC,QAFC;AAGf,gBAAcC;AAHC,CAAjB;;AAMA,MAAME,oBAAoB,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAC3C,QAAMC,MAAM,GAAG,OAAf;AAEA,sBACE,QAAC,YAAD;AACE,IAAA,MAAM,EAAEA,MADV;AAEE,IAAA,aAAa,EAAER,QAFjB;AAGE,IAAA,QAAQ,EAAEK,QAAQ,CAACG,MAAD,CAHpB;AAAA,cAKGD;AALH;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAZD;;KAAMD,oB;AAcN,eAAeA,oBAAf","sourcesContent":["import { Fragment } from 'react'\nimport { IntlProvider } from 'react-intl'\nimport ruRU from './languages/ru-RU.json'\nimport uzLatnUZ from './languages/uz-Latn-UZ.json'\nimport uzCyrlUZ from './languages/uz-Cyrl-UZ.json'\n\nconst messages = {\n  'ru-RU': ruRU,\n  'uz-Latn-UZ': uzLatnUZ,\n  'uz-Cyrl-UZ': uzCyrlUZ\n}\n\nconst LocalizationProvider = ({children}) => {\n  const locale = 'ru-RU'\n\n  return (\n    <IntlProvider \n      locale={locale}\n      textComponent={Fragment}\n      messages={messages[locale]}\n    >\n      {children}\n    </IntlProvider>\n  )\n}\n\nexport default LocalizationProvider"]},"metadata":{},"sourceType":"module"}